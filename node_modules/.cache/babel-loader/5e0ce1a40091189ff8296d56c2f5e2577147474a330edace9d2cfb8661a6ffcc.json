{"ast":null,"code":"import { renderSlot as _renderSlot, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"modal-backdrop\"\n};\nconst _hoisted_2 = {\n  class: \"modal\"\n};\nconst _hoisted_3 = {\n  class: \"modal-header\"\n};\nconst _hoisted_4 = {\n  class: \"modal-body\"\n};\nconst _hoisted_5 = {\n  class: \"modal-body\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"Classify Prioritization\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Urgent\"\n}, \"Urgent\", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Normal\"\n}, \"Normal\", -1 /* HOISTED */);\nconst _hoisted_9 = [_hoisted_6, _hoisted_7, _hoisted_8];\nconst _hoisted_10 = {\n  class: \"modal-footer\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"dtDueDate\"\n}, \"Due Date:\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"header\", _hoisted_3, [_renderSlot(_ctx.$slots, \"header\", {}, () => [_createElementVNode(\"h3\", null, _toDisplayString(this.action), 1 /* TEXT */)])]), _createElementVNode(\"section\", _hoisted_4, [_renderSlot(_ctx.$slots, \"body\", {}, () => [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.taskName = $event),\n    id: \"txtTaskName\",\n    placeholder: \"Task Name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.taskName]])])]), _createElementVNode(\"section\", _hoisted_5, [_renderSlot(_ctx.$slots, \"body\", {}, () => [_withDirectives(_createElementVNode(\"select\", {\n    name: \"taskPriority\",\n    id: \"taskPriority\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.taskPriority = $event)\n  }, [..._hoisted_9], 512 /* NEED_PATCH */), [[_vModelSelect, $data.taskPriority]])])]), _createElementVNode(\"footer\", _hoisted_10, [_renderSlot(_ctx.$slots, \"footer\", {}, () => [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"dtDueDate\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.taskDate = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.taskDate]])])]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn-green\",\n    onClick: _cache[3] || (_cache[3] = $event => $options.bindAction())\n  }, \" Save \"), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn-red\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.close && $options.close(...args))\n  }, \" Cancel \")])]);\n}","map":{"version":3,"names":["class","_createElementVNode","value","_hoisted_6","_hoisted_7","_hoisted_8","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_renderSlot","_ctx","$slots","_toDisplayString","action","_hoisted_4","type","_cache","$event","$data","taskName","id","placeholder","_hoisted_5","name","taskPriority","_hoisted_9","_hoisted_10","_hoisted_11","taskDate","onClick","$options","bindAction","args","close"],"sources":["C:\\Users\\User\\Desktop\\case-study\\task-management-system\\src\\components\\TaskModal.vue"],"sourcesContent":["<template>\r\n    <div class=\"modal-backdrop\">\r\n        <div class=\"modal\">\r\n            <header class=\"modal-header\">\r\n                <slot name=\"header\">\r\n                    <h3>{{ this.action }}</h3>\r\n                </slot>\r\n            </header>\r\n\r\n            <section class=\"modal-body\">\r\n                <slot name=\"body\">\r\n                    <input type=\"text\" v-model=\"taskName\" id=\"txtTaskName\" placeholder=\"Task Name\">\r\n                </slot>\r\n            </section>\r\n\r\n            <section class=\"modal-body\">\r\n                <slot name=\"body\">\r\n                    <select name=\"taskPriority\" id=\"taskPriority\" v-model=\"taskPriority\">\r\n                        <option value=\"\">Classify Prioritization</option>\r\n                        <option value=\"Urgent\">Urgent</option>\r\n                        <option value=\"Normal\">Normal</option>\r\n                    </select>\r\n                </slot>\r\n            </section>\r\n\r\n            <footer class=\"modal-footer\">\r\n                <slot name=\"footer\">\r\n                    <label for=\"dtDueDate\">Due Date:</label>\r\n                    <input type=\"date\" id=\"dtDueDate\" v-model=\"taskDate\">\r\n                </slot>\r\n            </footer>\r\n            <button type=\"button\" class=\"btn-green\" @click=\"bindAction()\">\r\n                Save\r\n            </button>\r\n\r\n            <button type=\"button\" class=\"btn-red\" @click=\"close\">\r\n                Cancel\r\n            </button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { String } from 'core-js';\r\n\r\nexport default {\r\n    name: 'TaskModal',\r\n\r\n    props: {\r\n        action: {\r\n            required: true,\r\n            type: String\r\n        },\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            taskName: '',\r\n            taskDate: '',\r\n            taskPriority: ''\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        close() {\r\n            this.$emit('close');\r\n        },\r\n\r\n        bindAction() {\r\n\r\n            /**\r\n             * Check if this.action is Add Task\r\n             *  if true, do procedure for adding a task in the list\r\n             */\r\n            if (this.action === \"Add Task\") {\r\n                if (this.taskName && this.taskDate && this.taskPriority) {\r\n                    this.$tasks.push({\r\n                        taskName: this.taskName,\r\n                        taskDate: this.taskDate,\r\n                        taskPriority: this.taskPriority\r\n                    });\r\n\r\n                    alert(\"Task \" + this.taskName + \" created\");\r\n                    this.close();\r\n                    return;\r\n\r\n                } else {\r\n\r\n                    alert(\"Invalid task entry\");\r\n                    return;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n.modal-backdrop {\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.modal {\r\n    background: #FFFFFF;\r\n    box-shadow: 2px 2px 20px 1px;\r\n    overflow-x: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 1.5rem;\r\n}\r\n\r\n.modal-header,\r\n.modal-footer {\r\n    padding: 15px;\r\n    display: flex;\r\n}\r\n\r\n.modal-header {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-bottom: 1px solid #eeeeee;\r\n    color: #4AAE9B;\r\n    justify-content: space-between;\r\n}\r\n\r\n.modal-footer {\r\n    border-top: 1px solid #eeeeee;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 1.5rem;\r\n}\r\n\r\n.modal-body {\r\n    position: relative;\r\n    padding: 20px 10px;\r\n}\r\n\r\n.btn-close {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    border: none;\r\n    font-size: 20px;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n    color: #4AAE9B;\r\n    background: transparent;\r\n}\r\n\r\n.btn-green {\r\n    color: white;\r\n    background: #4AAE9B;\r\n    border: 1px solid #4AAE9B;\r\n    border-radius: 2px;\r\n}\r\n\r\n.btn-red {\r\n    color: white;\r\n    background: #e71919;\r\n    border: 1px solid #4AAE9B;\r\n    border-radius: 2px;\r\n}\r\n\r\ninput[type=text] {\r\n    font-size: 1rem;\r\n}\r\n\r\n#taskPriority {\r\n    font-size: 1rem;\r\n}\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;EAClBA,KAAK,EAAC;AAAO;;EACNA,KAAK,EAAC;AAAc;;EAMnBA,KAAK,EAAC;AAAY;;EAMlBA,KAAK,EAAC;AAAY;gCAGfC,mBAAA,CAAiD;EAAzCC,KAAK,EAAC;AAAE,GAAC,yBAAuB;gCACxCD,mBAAA,CAAsC;EAA9BC,KAAK,EAAC;AAAQ,GAAC,QAAM;gCAC7BD,mBAAA,CAAsC;EAA9BC,KAAK,EAAC;AAAQ,GAAC,QAAM;oBAF7BC,UAAiD,EACjDC,UAAsC,EACtCC,UAAsC,C;;EAK1CL,KAAK,EAAC;AAAc;iCAEpBC,mBAAA,CAAwC;EAAjCK,GAAG,EAAC;AAAW,GAAC,WAAS;;uBA1BhDC,mBAAA,CAsCM,OAtCNC,UAsCM,GArCFP,mBAAA,CAoCM,OApCNQ,UAoCM,GAnCFR,mBAAA,CAIS,UAJTS,UAIS,GAHLC,WAAA,CAEOC,IAAA,CAAAC,MAAA,gBAFP,MAEO,CADHZ,mBAAA,CAA0B,YAAAa,gBAAA,MAAdC,MAAM,iB,KAI1Bd,mBAAA,CAIU,WAJVe,UAIU,GAHNL,WAAA,CAEOC,IAAA,CAAAC,MAAA,cAFP,MAEO,C,gBADHZ,mBAAA,CAA+E;IAAxEgB,IAAI,EAAC,MAAM;IAXtC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAWgDC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEG,EAAE,EAAC,aAAa;IAACC,WAAW,EAAC;iDAAvCH,KAAA,CAAAC,QAAQ,E,OAI5CpB,mBAAA,CAQU,WARVuB,UAQU,GAPNb,WAAA,CAMOC,IAAA,CAAAC,MAAA,cANP,MAMO,C,gBALHZ,mBAAA,CAIS;IAJDwB,IAAI,EAAC,cAAc;IAACH,EAAE,EAAC,cAAc;IAjBjE,uBAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAiB2EC,KAAA,CAAAM,YAAY,GAAAP,MAAA;KAjBvF,IAAAQ,UAAA,2B,gBAiB2EP,KAAA,CAAAM,YAAY,E,OAQ3EzB,mBAAA,CAKS,UALT2B,WAKS,GAJLjB,WAAA,CAGOC,IAAA,CAAAC,MAAA,gBAHP,MAGO,CAFHgB,WAAwC,E,gBACxC5B,mBAAA,CAAqD;IAA9CgB,IAAI,EAAC,MAAM;IAACK,EAAE,EAAC,WAAW;IA5BrD,uBAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA4B+DC,KAAA,CAAAU,QAAQ,GAAAX,MAAA;iDAARC,KAAA,CAAAU,QAAQ,E,OAG3D7B,mBAAA,CAES;IAFDgB,IAAI,EAAC,QAAQ;IAACjB,KAAK,EAAC,WAAW;IAAE+B,OAAK,EAAAb,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEa,QAAA,CAAAC,UAAU;KAAI,QAE9D,GAEAhC,mBAAA,CAES;IAFDgB,IAAI,EAAC,QAAQ;IAACjB,KAAK,EAAC,SAAS;IAAE+B,OAAK,EAAAb,MAAA,QAAAA,MAAA,UAAAgB,IAAA,KAAEF,QAAA,CAAAG,KAAA,IAAAH,QAAA,CAAAG,KAAA,IAAAD,IAAA,CAAK;KAAE,UAErD,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}