{"ast":null,"code":"import TaskModal from '@/components/TaskModal.vue';\nexport default {\n  components: {\n    TaskModal\n  },\n  data() {\n    return {\n      tasks: this.$tasks,\n      isModalVisible: false,\n      index: 0\n    };\n  },\n  methods: {\n    showModal(index) {\n      this.index = index;\n      this.isModalVisible = true;\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    },\n    deleteTask(index) {\n      /**\r\n       * if taskStatus is !false,\r\n       *  this means that this task is not done yet\r\n       *  and will not be able to delete\r\n       */\n      if (!this.tasks[index].taskStatus) {\n        alert(\"Task is unfinished\");\n        return;\n      }\n      let conf = confirm(\"Deleting task \" + this.tasks[index].taskName + \"?\");\n      if (conf) {\n        alert(\"Task \" + this.tasks[index].taskName + \" Deleted\");\n        this.$tasks = this.tasks.splice(index, 1);\n      } else {\n        alert(\"Delete cancelled\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["TaskModal","components","data","tasks","$tasks","isModalVisible","index","methods","showModal","closeModal","deleteTask","taskStatus","alert","conf","confirm","taskName","splice"],"sources":["C:\\Users\\User\\Desktop\\case-study\\task-management-system\\src\\components\\TaskList.vue"],"sourcesContent":["<template>\r\n    <div class=\"taskList\">\r\n\r\n        <TaskModal v-if=\"isModalVisible\" \r\n            action=\"Update\"\r\n            :tasks=this.tasks \r\n            :isUpdate=true\r\n            @close=\"closeModal\" />\r\n\r\n        <h3>All tasks</h3>\r\n        <table>\r\n            <tr>\r\n                <th>Task Name</th>\r\n                <th>Task Deadline</th>\r\n                <th>Urgency</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n            </tr>\r\n\r\n            <tr \r\n                v-for=\"(task, index) in this.tasks\"\r\n                v-bind:key=\"index\"\r\n                @click=\"showModal(index)\">\r\n\r\n                <td>{{ task.taskName }}</td>\r\n                <td>{{ task.taskDate }}</td>\r\n                <td>{{ task.taskPriority }}</td>\r\n                <td v-if=\"task.taskStatus\">Finished</td>\r\n                <td v-else>Not Finished</td>\r\n                <td v-on:click.stop=\"\">\r\n                    <button @click=\"deleteTask(index)\">\r\n                        Delete\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport TaskModal from '@/components/TaskModal.vue';\r\n\r\nexport default {\r\n\r\n    components: {\r\n        TaskModal\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            tasks: this.$tasks,\r\n            isModalVisible: false,\r\n            index: 0\r\n        }\r\n    },\r\n\r\n    methods: {\r\n\r\n        showModal(index) {\r\n            this.index = index;\r\n            this.isModalVisible = true;\r\n        },\r\n        closeModal() {\r\n            this.isModalVisible = false;\r\n        },\r\n\r\n        deleteTask(index) {\r\n            /**\r\n             * if taskStatus is !false,\r\n             *  this means that this task is not done yet\r\n             *  and will not be able to delete\r\n             */\r\n            if (!this.tasks[index].taskStatus) {\r\n                alert(\"Task is unfinished\");\r\n                return;\r\n            }\r\n\r\n            let conf = confirm(\"Deleting task \" + this.tasks[index].taskName + \"?\");\r\n            if (conf) {\r\n                alert(\"Task \" + this.tasks[index].taskName + \" Deleted\");\r\n                this.$tasks = this.tasks.splice(index, 1);\r\n            } else {\r\n                alert(\"Delete cancelled\");\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.taskList {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n}\r\n</style>"],"mappings":"AAwCA,OAAOA,SAAQ,MAAO,4BAA4B;AAElD,eAAe;EAEXC,UAAU,EAAE;IACRD;EACJ,CAAC;EAEDE,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,IAAI,CAACC,MAAM;MAClBC,cAAc,EAAE,KAAK;MACrBC,KAAK,EAAE;IACX;EACJ,CAAC;EAEDC,OAAO,EAAE;IAELC,SAASA,CAACF,KAAK,EAAE;MACb,IAAI,CAACA,KAAI,GAAIA,KAAK;MAClB,IAAI,CAACD,cAAa,GAAI,IAAI;IAC9B,CAAC;IACDI,UAAUA,CAAA,EAAG;MACT,IAAI,CAACJ,cAAa,GAAI,KAAK;IAC/B,CAAC;IAEDK,UAAUA,CAACJ,KAAK,EAAE;MACd;;;;;MAKA,IAAI,CAAC,IAAI,CAACH,KAAK,CAACG,KAAK,CAAC,CAACK,UAAU,EAAE;QAC/BC,KAAK,CAAC,oBAAoB,CAAC;QAC3B;MACJ;MAEA,IAAIC,IAAG,GAAIC,OAAO,CAAC,gBAAe,GAAI,IAAI,CAACX,KAAK,CAACG,KAAK,CAAC,CAACS,QAAO,GAAI,GAAG,CAAC;MACvE,IAAIF,IAAI,EAAE;QACND,KAAK,CAAC,OAAM,GAAI,IAAI,CAACT,KAAK,CAACG,KAAK,CAAC,CAACS,QAAO,GAAI,UAAU,CAAC;QACxD,IAAI,CAACX,MAAK,GAAI,IAAI,CAACD,KAAK,CAACa,MAAM,CAACV,KAAK,EAAE,CAAC,CAAC;MAC7C,OAAO;QACHM,KAAK,CAAC,kBAAkB,CAAC;MAC7B;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}