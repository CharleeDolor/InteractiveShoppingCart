{"ast":null,"code":"import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-189e9673\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"taskList\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"All tasks\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Task Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Task Deadline\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Urgency\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Status\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Action\")], -1 /* HOISTED */));\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TaskModal = _resolveComponent(\"TaskModal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createVNode(_component_TaskModal, {\n    action: \"Add Task\",\n    task: _ctx.task,\n    isUpdate: true,\n    onClose: $options.closeModal\n  }, null, 8 /* PROPS */, [\"task\", \"onClose\"]), [[_vShow, $data.isModalVisible]]), _hoisted_2, _createElementVNode(\"table\", null, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.tasks, (task, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index,\n      onClick: _cache[1] || (_cache[1] = (...args) => $options.showModal && $options.showModal(...args))\n    }, [_createElementVNode(\"td\", null, _toDisplayString(task.taskName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(task.taskDate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(task.taskPriority), 1 /* TEXT */), task.taskStatus ? (_openBlock(), _createElementBlock(\"td\", _hoisted_4, \"Finished\")) : (_openBlock(), _createElementBlock(\"td\", _hoisted_5, \"Not Finished\")), _createElementVNode(\"td\", {\n      onClick: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"]))\n    }, [_createElementVNode(\"button\", {\n      onClick: $event => $options.deleteTask(index)\n    }, \" Delete \", 8 /* PROPS */, _hoisted_6)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_createVNode","_component_TaskModal","action","task","_ctx","isUpdate","onClose","$options","closeModal","$data","isModalVisible","_hoisted_2","_hoisted_3","_Fragment","_renderList","tasks","index","onClick","_cache","args","showModal","_toDisplayString","taskName","taskDate","taskPriority","taskStatus","_hoisted_4","_hoisted_5","_withModifiers","$event","deleteTask","_hoisted_6"],"sources":["C:\\Users\\User\\Desktop\\case-study\\task-management-system\\src\\components\\TaskList.vue"],"sourcesContent":["<template>\r\n    <div class=\"taskList\">\r\n\r\n        <TaskModal v-show=\"isModalVisible\" action=\"Add Task\" :task=task :isUpdate=true @close=\"closeModal\" />\r\n\r\n        <h3>All tasks</h3>\r\n        <table>\r\n            <tr>\r\n                <th>Task Name</th>\r\n                <th>Task Deadline</th>\r\n                <th>Urgency</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n            </tr>\r\n\r\n            <tr v-for=\"(task, index) in this.tasks\" v-bind:key=\"index\" @click=\"showModal\">\r\n                <td>{{ task.taskName }}</td>\r\n                <td>{{ task.taskDate }}</td>\r\n                <td>{{ task.taskPriority }}</td>\r\n                <td v-if=\"task.taskStatus\">Finished</td>\r\n                <td v-else>Not Finished</td>\r\n                <td v-on:click.stop=\"\">\r\n                    <button @click=\"deleteTask(index)\">\r\n                        Delete\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport TaskModal from '@/components/TaskModal.vue';\r\n\r\nexport default {\r\n\r\n    components: {\r\n        TaskModal\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            tasks: this.$tasks,\r\n            isModalVisible: false,\r\n        }\r\n    },\r\n\r\n    methods: {\r\n\r\n        showModal() {\r\n            this.isModalVisible = true;\r\n        },\r\n        closeModal() {\r\n            this.isModalVisible = false;\r\n        },\r\n\r\n        deleteTask(index) {\r\n            /**\r\n             * if taskStatus is !false,\r\n             *  this means that this task is not done yet\r\n             *  and will not be able to delete\r\n             */\r\n            if (!this.tasks[index].taskStatus) {\r\n                alert(\"Task is unfinished\");\r\n                return;\r\n            }\r\n\r\n            let conf = confirm(\"Deleting task \" + this.tasks[index].taskName + \"?\");\r\n            if (conf) {\r\n                alert(\"Task \" + this.tasks[index].taskName + \" Deleted\");\r\n                this.$tasks = this.tasks.splice(index, 1);\r\n            } else {\r\n                alert(\"Delete cancelled\");\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.taskList {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n}\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAU;gEAIjBC,mBAAA,CAAkB,YAAd,WAAS;gEAETA,mBAAA,CAMK,a,aALDA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAsB,YAAlB,eAAa,G,aACjBA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAAe,YAAX,QAAM,E;;EAZ1BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;mBAAA;;;uBACIC,mBAAA,CA2BM,OA3BNC,UA2BM,G,gBAzBFC,YAAA,CAAqGC,oBAAA;IAAlEC,MAAM,EAAC,UAAU;IAAEC,IAAI,EAACC,IAAA,CAAAD,IAAI;IAAEE,QAAQ,EAAC,IAAI;IAAEC,OAAK,EAAEC,QAAA,CAAAC;0DAApEC,KAAA,CAAAC,cAAc,E,GAEjCC,UAAkB,EAClBf,mBAAA,CAqBQ,gBApBJgB,UAMK,G,kBAELd,mBAAA,CAWKe,SAAA,QA1BjBC,WAAA,MAe6CC,KAAK,EAflD,CAewBZ,IAAI,EAAEa,KAAK;yBAAvBlB,mBAAA,CAWK;MAX0CD,GAAG,EAAEmB,KAAK;MAAGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEZ,QAAA,CAAAa,SAAA,IAAAb,QAAA,CAAAa,SAAA,IAAAD,IAAA,CAAS;QACxEvB,mBAAA,CAA4B,YAAAyB,gBAAA,CAArBlB,IAAI,CAACmB,QAAQ,kBACpB1B,mBAAA,CAA4B,YAAAyB,gBAAA,CAArBlB,IAAI,CAACoB,QAAQ,kBACpB3B,mBAAA,CAAgC,YAAAyB,gBAAA,CAAzBlB,IAAI,CAACqB,YAAY,kBACdrB,IAAI,CAACsB,UAAU,I,cAAzB3B,mBAAA,CAAwC,MAnBxD4B,UAAA,EAmB2C,UAAQ,M,cACnC5B,mBAAA,CAA4B,MApB5C6B,UAAA,EAoB2B,cAAY,IACvB/B,mBAAA,CAIK;MAJIqB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MArB9BU,cAAA,CAqBoB,QAAkB;QAClBhC,mBAAA,CAES;MAFAqB,OAAK,EAAAY,MAAA,IAAEtB,QAAA,CAAAuB,UAAU,CAACd,KAAK;OAAG,UAEnC,iBAxBpBe,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}