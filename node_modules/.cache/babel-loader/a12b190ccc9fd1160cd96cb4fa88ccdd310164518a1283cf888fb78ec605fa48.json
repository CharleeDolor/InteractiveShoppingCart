{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { String } from 'core-js';\nexport default {\n  name: 'TaskModal',\n  beforeMount() {\n    if (this.isUpdate) {\n      this.taskName = this.tasks[this.index].taskName;\n      this.taskPriority = this.tasks[this.index].taskPriority;\n      this.taskDate = this.tasks[this.index].taskDate;\n      this.taskStatus = this.tasks[this.index].taskStatus;\n    }\n  },\n  props: {\n    action: {\n      required: true,\n      type: String\n    },\n    index: {\n      type: Number\n    },\n    isUpdate: {\n      type: Boolean\n    }\n  },\n  data() {\n    return {\n      taskName: '',\n      taskDate: '',\n      taskPriority: '',\n      tasks: this.$tasks\n    };\n  },\n  methods: {\n    close() {\n      this.$emit('close');\n    },\n    /**\r\n     * \r\n     */\n    bindAction() {\n      /**\r\n       * Check if this.action is Add Task\r\n       *  if true, then modal is in add task mode\r\n       */\n      if (this.action === \"Add Task\") {\n        if (this.taskName && this.taskDate && this.taskPriority) {\n          this.tasks.push({\n            taskName: this.taskName,\n            taskDate: this.taskDate,\n            taskPriority: this.taskPriority,\n            taskStatus: false\n          });\n          this.$tasks = this.tasks;\n          alert(\"Task \" + this.taskName + \" created\");\n          this.taskName = '', this.taskDate = '', this.taskPriority = '', this.close();\n          return;\n        } else {\n          alert(\"Invalid task entry\");\n          return;\n        }\n      }\n\n      /**\r\n       * If this.action === \"Update\",\r\n       *  this means that modal is in update mode\r\n       */\n      if (this.action === \"Update\") {\n        alert(\"Updated Successfully\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["String","name","beforeMount","isUpdate","taskName","tasks","index","taskPriority","taskDate","taskStatus","props","action","required","type","Number","Boolean","data","$tasks","methods","close","$emit","bindAction","push","alert"],"sources":["C:\\Users\\User\\Desktop\\case-study\\task-management-system\\src\\components\\TaskModal.vue"],"sourcesContent":["<template>\r\n    <div class=\"modal-backdrop\">\r\n        <div class=\"modal\">\r\n            <header class=\"modal-header\">\r\n                <slot name=\"header\">\r\n                    <h3>{{ this.action }}</h3>\r\n                </slot>\r\n            </header>\r\n\r\n            <section class=\"modal-body\">\r\n                <slot name=\"body\">\r\n                    <input type=\"text\" v-model=\"taskName\" id=\"txtTaskName\" placeholder=\"Task Name\">\r\n                </slot>\r\n            </section>\r\n\r\n            <section class=\"modal-body\">\r\n                <slot name=\"body\">\r\n                    <select name=\"taskPriority\" id=\"taskPriority\" v-model=\"taskPriority\">\r\n                        <option value=\"\">Classify Prioritization</option>\r\n                        <option value=\"Urgent\">Urgent</option>\r\n                        <option value=\"Normal\">Normal</option>\r\n                    </select>\r\n                </slot>\r\n            </section>\r\n\r\n            <footer class=\"modal-footer\">\r\n                <slot name=\"footer\">\r\n                    <label for=\"dtDueDate\">Due Date:</label>\r\n                    <input type=\"date\" id=\"dtDueDate\" v-model=\"taskDate\">\r\n                </slot>\r\n            </footer>\r\n\r\n            <footer class=\"modal-footer\" v-if=\"this.isUpdate\">\r\n                <slot name=\"footer\">\r\n                    <label for=\"taskStatus\">Status</label>\r\n                    <input type=\"checkbox\">\r\n                </slot>\r\n            </footer>\r\n\r\n            <button type=\"button\" class=\"btn-green\" \r\n            @click=\"bindAction()\">\r\n                Save\r\n            </button>\r\n\r\n            <button type=\"button\" class=\"btn-red\" @click=\"close\">\r\n                Cancel\r\n            </button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { String } from 'core-js';\r\n\r\nexport default {\r\n    name: 'TaskModal',\r\n\r\n    beforeMount(){\r\n        \r\n        if(this.isUpdate){\r\n            this.taskName = this.tasks[this.index].taskName\r\n            this.taskPriority = this.tasks[this.index].taskPriority\r\n            this.taskDate = this.tasks[this.index].taskDate\r\n            this.taskStatus = this.tasks[this.index].taskStatus\r\n        }\r\n    },\r\n\r\n    props: {\r\n        action: {\r\n            required: true,\r\n            type: String\r\n        },\r\n\r\n        index:{\r\n            type: Number\r\n        },\r\n\r\n        isUpdate:{\r\n            type: Boolean\r\n        }\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            taskName: '',\r\n            taskDate: '',\r\n            taskPriority: '',\r\n            tasks: this.$tasks\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        close() {\r\n            this.$emit('close');\r\n        },\r\n\r\n        /**\r\n         * \r\n         */\r\n        bindAction(){\r\n\r\n            /**\r\n             * Check if this.action is Add Task\r\n             *  if true, then modal is in add task mode\r\n             */\r\n            if (this.action === \"Add Task\") {\r\n                if (this.taskName && this.taskDate && this.taskPriority) {\r\n                    this.tasks.push({\r\n                        taskName: this.taskName,\r\n                        taskDate: this.taskDate,\r\n                        taskPriority: this.taskPriority,\r\n                        taskStatus: false\r\n                    });\r\n\r\n                    this.$tasks = this.tasks;\r\n                    alert(\"Task \" + this.taskName + \" created\");\r\n                    this.taskName = '',\r\n                    this.taskDate ='',\r\n                    this.taskPriority ='',\r\n                    this.close();\r\n                    return;\r\n\r\n                } else {\r\n\r\n                    alert(\"Invalid task entry\");\r\n                    return;\r\n                }\r\n            }\r\n\r\n            /**\r\n             * If this.action === \"Update\",\r\n             *  this means that modal is in update mode\r\n             */\r\n            if(this.action === \"Update\"){\r\n                alert(\"Updated Successfully\");\r\n            }\r\n        }\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n.modal-backdrop {\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.modal {\r\n    background: #FFFFFF;\r\n    box-shadow: 2px 2px 20px 1px;\r\n    overflow-x: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 1.5rem;\r\n}\r\n\r\n.modal-header,\r\n.modal-footer {\r\n    padding: 15px;\r\n    display: flex;\r\n}\r\n\r\n.modal-header {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-bottom: 1px solid #eeeeee;\r\n    color: #4AAE9B;\r\n    justify-content: space-between;\r\n}\r\n\r\n.modal-footer {\r\n    border-top: 1px solid #eeeeee;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 1.5rem;\r\n}\r\n\r\n.modal-body {\r\n    position: relative;\r\n    padding: 20px 10px;\r\n}\r\n\r\n.btn-close {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    border: none;\r\n    font-size: 20px;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n    color: #4AAE9B;\r\n    background: transparent;\r\n}\r\n\r\n.btn-green {\r\n    color: white;\r\n    background: #4AAE9B;\r\n    border: 1px solid #4AAE9B;\r\n    border-radius: 2px;\r\n}\r\n\r\n.btn-red {\r\n    color: white;\r\n    background: #e71919;\r\n    border: 1px solid #4AAE9B;\r\n    border-radius: 2px;\r\n}\r\n\r\ninput[type=text] {\r\n    font-size: 1rem;\r\n}\r\n\r\n#taskPriority {\r\n    font-size: 1rem;\r\n}\r\n</style>"],"mappings":";AAoDA,SAASA,MAAK,QAAS,SAAS;AAEhC,eAAe;EACXC,IAAI,EAAE,WAAW;EAEjBC,WAAWA,CAAA,EAAE;IAET,IAAG,IAAI,CAACC,QAAQ,EAAC;MACb,IAAI,CAACC,QAAO,GAAI,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,KAAK,CAAC,CAACF,QAAO;MAC9C,IAAI,CAACG,YAAW,GAAI,IAAI,CAACF,KAAK,CAAC,IAAI,CAACC,KAAK,CAAC,CAACC,YAAW;MACtD,IAAI,CAACC,QAAO,GAAI,IAAI,CAACH,KAAK,CAAC,IAAI,CAACC,KAAK,CAAC,CAACE,QAAO;MAC9C,IAAI,CAACC,UAAS,GAAI,IAAI,CAACJ,KAAK,CAAC,IAAI,CAACC,KAAK,CAAC,CAACG,UAAS;IACtD;EACJ,CAAC;EAEDC,KAAK,EAAE;IACHC,MAAM,EAAE;MACJC,QAAQ,EAAE,IAAI;MACdC,IAAI,EAAEb;IACV,CAAC;IAEDM,KAAK,EAAC;MACFO,IAAI,EAAEC;IACV,CAAC;IAEDX,QAAQ,EAAC;MACLU,IAAI,EAAEE;IACV;EACJ,CAAC;EAEDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHZ,QAAQ,EAAE,EAAE;MACZI,QAAQ,EAAE,EAAE;MACZD,YAAY,EAAE,EAAE;MAChBF,KAAK,EAAE,IAAI,CAACY;IAChB;EACJ,CAAC;EAEDC,OAAO,EAAE;IACLC,KAAKA,CAAA,EAAG;MACJ,IAAI,CAACC,KAAK,CAAC,OAAO,CAAC;IACvB,CAAC;IAED;;;IAGAC,UAAUA,CAAA,EAAE;MAER;;;;MAIA,IAAI,IAAI,CAACV,MAAK,KAAM,UAAU,EAAE;QAC5B,IAAI,IAAI,CAACP,QAAO,IAAK,IAAI,CAACI,QAAO,IAAK,IAAI,CAACD,YAAY,EAAE;UACrD,IAAI,CAACF,KAAK,CAACiB,IAAI,CAAC;YACZlB,QAAQ,EAAE,IAAI,CAACA,QAAQ;YACvBI,QAAQ,EAAE,IAAI,CAACA,QAAQ;YACvBD,YAAY,EAAE,IAAI,CAACA,YAAY;YAC/BE,UAAU,EAAE;UAChB,CAAC,CAAC;UAEF,IAAI,CAACQ,MAAK,GAAI,IAAI,CAACZ,KAAK;UACxBkB,KAAK,CAAC,OAAM,GAAI,IAAI,CAACnB,QAAO,GAAI,UAAU,CAAC;UAC3C,IAAI,CAACA,QAAO,GAAI,EAAE,EAClB,IAAI,CAACI,QAAO,GAAG,EAAE,EACjB,IAAI,CAACD,YAAW,GAAG,EAAE,EACrB,IAAI,CAACY,KAAK,CAAC,CAAC;UACZ;QAEJ,OAAO;UAEHI,KAAK,CAAC,oBAAoB,CAAC;UAC3B;QACJ;MACJ;;MAEA;;;;MAIA,IAAG,IAAI,CAACZ,MAAK,KAAM,QAAQ,EAAC;QACxBY,KAAK,CAAC,sBAAsB,CAAC;MACjC;IACJ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}